#include "stdafx.h"
#include "ut_opcodes.h"
#include "ClientSession.h"


CUT_Opcodes::CUT_Opcodes()
{
	BuildOpcodeList();
}


CUT_Opcodes::~CUT_Opcodes()
{
	delete[] aOpcodeHandler;
}


void CUT_Opcodes::BuildOpcodeList()
{
	for (int i = 0; i < UT_OPCODE_END - UT_OPCODE_BEGIN; i++)
		aOpcodeHandler[i] = new OpcodeHandler<CClientSession>;


	StoreOpcode(UT_ENTER_CHAT, "UT_ENTER_CHAT", PROCESS_THREADUNSAFE, &CClientSession::RecvEnterChat);
	StoreOpcode(UT_CHAT_MESSAGE_SAY, "UT_CHAT_MESSAGE_SAY", PROCESS_THREADUNSAFE, &CClientSession::RecvChatMessageSay);
	StoreOpcode(UT_CHAT_MESSAGE_SHOUT, "UC_CHARACTER_SERVERLIST_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvChatShout);
	StoreOpcode(UT_CHAT_MESSAGE_WHISPER, "UT_CHAT_MESSAGE_WHISPER", PROCESS_THREADUNSAFE, &CClientSession::RecvChatWhisper);
	StoreOpcode(UT_CHAT_MESSAGE_PARTY, "UT_CHAT_MESSAGE_PARTY", PROCESS_THREADUNSAFE, &CClientSession::RecvChatParty);
	StoreOpcode(UT_CHAT_MESSAGE_GUILD, "UT_CHAT_MESSAGE_GUILD", PROCESS_THREADUNSAFE, &CClientSession::RecvChatGuild);
	StoreOpcode(UT_CHAT_MESSAGE_TRADE, "UT_CHAT_MESSAGE_TRADE", PROCESS_THREADUNSAFE, &CClientSession::RecvChatTrade);
	StoreOpcode(UT_CHAT_MESSAGE_FIND_PARTY, "UT_CHAT_MESSAGE_FIND_PARTY", PROCESS_THREADUNSAFE, &CClientSession::RecvChatFindParty);
	StoreOpcode(UT_CHAT_USER_ON_CHANNEL_UPDATE_NFY, "UT_CHAT_USER_ON_CHANNEL_UPDATE_NFY", PROCESS_THREADUNSAFE, &CClientSession::RecvChatUserOnChannelUpdateNfy);
	StoreOpcode(UT_GUILD_DISBAND_REQ, "UT_GUILD_DISBAND_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvDisbandGuildReq);
	StoreOpcode(UT_GUILD_RESPONSE_INVITATION, "UT_GUILD_RESPONSE_INVITATION", PROCESS_THREADUNSAFE, &CClientSession::RecvGuildResponseInv);
	StoreOpcode(UT_GUILD_LEAVE_REQ, "UT_GUILD_LEAVE_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvLeaveGuildReq);
	StoreOpcode(UT_GUILD_KICK_OUT_REQ, "UT_GUILD_KICK_OUT_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvKickFromGuildReq);
	StoreOpcode(UT_GUILD_APPOINT_SECOND_MASTER_REQ, "UT_GUILD_APPOINT_SECOND_MASTER_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvNewSecondGuildMasterReq);
	StoreOpcode(UT_GUILD_DISMISS_SECOND_MASTER_REQ, "UT_GUILD_DISMISS_SECOND_MASTER_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvRemoveSecondGuildMasterReq);
	StoreOpcode(UT_GUILD_CHANGE_GUILD_MASTER_REQ, "UT_GUILD_CHANGE_GUILD_MASTER_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvUpdateGuildMasterReq);
	StoreOpcode(UT_FRIEND_ADD_REQ, "UT_FRIEND_ADD_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvAddFriendReq);
	StoreOpcode(UT_FRIEND_DEL_REQ, "UT_FRIEND_DEL_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvDelFriendReq);
	StoreOpcode(UT_FRIEND_MOVE_REQ, "UT_FRIEND_MOVE_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvMoveFriendReq);
	StoreOpcode(UT_FRIEND_BLACK_ADD_REQ, "UT_FRIEND_BLACK_ADD_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvBlackListAddReq);
	StoreOpcode(UT_FRIEND_BLACK_DEL_REQ, "UT_FRIEND_BLACK_DEL_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvBlackListDelReq);
	StoreOpcode(UT_RANKBATTLE_RANK_LIST_REQ, "UT_RANKBATTLE_RANK_LIST_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvRankBattleRankListReq);
	StoreOpcode(UT_RANKBATTLE_RANK_FIND_CHARACTER_REQ, "UT_RANKBATTLE_RANK_FIND_CHARACTER_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvRankBattleRankFindCharacterReq);
	StoreOpcode(UT_RANKBATTLE_RANK_COMPARE_DAY_REQ, "UT_RANKBATTLE_RANK_COMPARE_DAY_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvRankBattleRankCompareDayReq);
	StoreOpcode(UT_GUILD_CHANGE_NOTICE_REQ, "UT_GUILD_CHANGE_NOTICE_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvGuildChangeNoticeReq);
	StoreOpcode(UT_TMQ_RECORD_LIST_REQ, "UT_TMQ_RECORD_LIST_REQ", PROCESS_INPLACE, &CClientSession::OnInvalid);
	StoreOpcode(UT_TMQ_MEMBER_LIST_REQ, "UT_TMQ_MEMBER_LIST_REQ", PROCESS_INPLACE, &CClientSession::OnInvalid);
	StoreOpcode(UT_BUDOKAI_TOURNAMENT_INDIVIDUAL_LIST_REQ, "UT_BUDOKAI_TOURNAMENT_INDIVIDUAL_LIST_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvBudokaiTournamentIndividualListReq);
	StoreOpcode(UT_BUDOKAI_TOURNAMENT_INDIVIDUAL_INFO_REQ, "UT_BUDOKAI_TOURNAMENT_INDIVIDUAL_INFO_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvBudokaiTournamentIndividualInfoReq);
	StoreOpcode(UT_BUDOKAI_TOURNAMENT_TEAM_LIST_REQ, "UT_BUDOKAI_TOURNAMENT_TEAM_LIST_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvBudokaiTournamentTeamListReq);
	StoreOpcode(UT_BUDOKAI_TOURNAMENT_TEAM_INFO_REQ, "UT_BUDOKAI_TOURNAMENT_TEAM_INFO_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvBudokaiTournamentTeamInfoReq);

	StoreOpcode(UT_DOJO_BUDOKAI_SEED_ADD_REQ, "UT_DOJO_BUDOKAI_SEED_ADD_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvDojoBudokaiSeedAddReq);
	StoreOpcode(UT_DOJO_BUDOKAI_SEED_DEL_REQ, "UT_DOJO_BUDOKAI_SEED_DEL_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvDojoBudokaiSeedDelReq);
	StoreOpcode(UT_DOJO_NOTICE_CHANGE_REQ, "UT_DOJO_NOTICE_CHANGE_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvDojoNoticeChangeReq);
	StoreOpcode(UT_HLS_SLOT_MACHINE_INFO_REQ, "UT_HLS_SLOT_MACHINE_INFO_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvHlsSlotMachineInfoReq);
	StoreOpcode(UT_HLS_SLOT_MACHINE_EXTRACT_REQ, "UT_HLS_SLOT_MACHINE_EXTRACT_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvHlsSlotMachineExtractReq);
	StoreOpcode(UT_HLS_SLOT_MACHINE_WINNER_INFO_REQ, "UT_HLS_SLOT_MACHINE_WINNER_INFO_REQ", PROCESS_THREADUNSAFE, &CClientSession::RecvHlsSlotMachineWinnerInfoReq);
}


